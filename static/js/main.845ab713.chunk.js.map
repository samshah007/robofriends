{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBountry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","id","name","email","className","src","alt","title","cardlist","cardComponent","robots","map","user","Card","searchbox","onSearchChange","type","placeholder","onChange","scroll","props","style","children","ErrorBountry","state","hasError","error","info","this","setState","React","Component","App","event","searchfield","target","value","toLowerCase","fetch","then","response","json","users","filteredRobots","filter","includes","length","SearchBox","Scroll","Cardlist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAaeA,EAXF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,SAASC,MAAM,KACnE,sBAAKH,UAAU,wBAAf,UACI,6BAAKF,IACL,4BAAIC,WCULK,EAdE,SAAC,GAAc,IAKtBC,EALqB,EAAZC,OAKcC,KAAI,SAAAC,GAC7B,OAAO,cAACC,EAAD,CAAoBZ,GAAIW,EAAKX,GAAIC,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAAnDS,EAAKX,OAE3B,OACI,8BACKQ,KCAEK,EAZG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAChB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCAZI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAC,UAAY,SAAS,OAAS,QAAQ,OAAS,mBAA5D,SACKD,EAAME,YCcJC,E,kDAhBX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,UAAS,GAHJ,E,8DAMKC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGxB,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKR,MAAME,a,GAdCQ,IAAMC,WCwClBC,E,kDAnCX,aAAc,IAAD,8BACT,gBAWJjB,eAAiB,SAACkB,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,MAAMC,iBAX9C,EAAKb,MAAQ,CACTd,OAAQ,GACRwB,YAAY,IAJP,E,gEAOO,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACnB,OAAOgC,S,+BAKhC,IAAD,EAC0Bd,KAAKJ,MAA5Bd,EADH,EACGA,OAAQwB,EADX,EACWA,YACTS,EAAiBjC,EAAOkC,QAAO,SAAAlC,GACjC,OAAOA,EAAOR,KAAKmC,cAAcQ,SAASX,MAE9C,OAASxB,EAAOoC,OAGR,sBAAK1C,UAAU,KAAf,UACI,6CACA,cAAC2C,EAAD,CAAWhC,eAAgBa,KAAKb,iBAChC,cAACiC,EAAD,UACI,cAAC,EAAD,UACI,cAACC,EAAD,CAAUvC,OAAQiC,WAPjC,qBAAKvC,UAAU,KAAf,SAAoB,kD,GAtBf2B,aCMHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.845ab713.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = ({id,name,email}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" title=\"\" ></img>\r\n            <div className=\"center content-center\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst cardlist = ({robots}) => {\r\n    // To check ErrorBountry is working.\r\n    /* if(true){\r\n        throw new Error('NOOOOOO');\r\n    } */\r\n    const cardComponent = robots.map(user => {\r\n        return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\r\n    });\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    )\r\n}\r\nexport default cardlist;","import React from 'react';\r\n\r\nconst searchbox = ({onSearchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type=\"search\" \r\n                placeholder=\"Search Robots\"\r\n                onChange ={onSearchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default searchbox;","import React from 'react';\r\n\r\nconst scroll = (props) =>{\r\n    return(\r\n        <div style={{'overflowY':'scroll','height':'800px','border':'5px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default scroll;","import React from 'react';\r\n\r\nclass ErrorBountry extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Opps..This is not good.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBountry;","import React, {Component} from 'react';\r\nimport Cardlist from \"../components/Cardlist\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBountry from '../components/ErrorBountry';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users}));\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value.toLowerCase()});\r\n    }\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield)\r\n        });\r\n        return (!robots.length) ?\r\n            (<div className=\"tc\"><h1>Loading...</h1></div>):\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1>Robofriends</h1>\r\n                    <SearchBox onSearchChange={this.onSearchChange}></SearchBox>\r\n                    <Scroll>\r\n                        <ErrorBountry>\r\n                            <Cardlist robots={filteredRobots} />\r\n                        </ErrorBountry> \r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}